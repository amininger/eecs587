sp {kb*propose*test-result
   (state <s> ^name kb
              ^phase test
              ^sub-phase result
              ^step <step>
              ^max-tests <max>
              ^current-test {<c> <= <max>}
              ^tests <ts>)
   (<ts> ^test <t>)
   (<t> ^id <c>
        ^steps {>= <step>})
-->
   (<s> ^operator <op> + =)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
}

##

sp {apply*test-result*retrieve*none*success
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type retrieve
         ^status none)
   (<e-result> ^retrieved no-memory)
-->
   (<s> ^result success
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting - no-memory| (crlf))
   (write |  result - no-memory| (crlf))
}

sp {apply*test-result*retrieve*none*failure
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type retrieve
         ^status none)
  -(<e-result> ^retrieved no-memory)
-->
   (<s> ^result failure
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting - no-memory| (crlf))
   (write |  result - memory retrieved| (crlf))
}

##

sp {apply*test-result*retrieve*good*success
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>
              ^entries <es>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<es> ^entry <entry>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type retrieve
         ^status good
         ^expected <expected>)
   (<e-result> ^retrieved <retrieved>)
   (<retrieved> ^observing <expected>)
   (<entry> ^id <expected>
            ^name <entry-name>
            ^scientific-name <entry-s-name>)
-->
   (<s> ^result success
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting - | <entry-name> | (| <entry-s-name> |)| (crlf))
   (write |  result - | <entry-name> | (| <entry-s-name> |)| (crlf))
}

sp {apply*test-result*retrieve*good*wrong
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>
              ^entries <es>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<es> ^entry <entry1>
         ^entry <entry2>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type retrieve
         ^status good
         ^expected <expected>)
   (<e-result> ^retrieved <retrieved>)
   (<retrieved> ^observing {<observed> <> <expected>})
   (<entry1> ^id <expected>
             ^name <entry1-name>
             ^scientific-name <entry1-s-name>)
   (<entry2> ^id <observed>
             ^name <entry2-name>
             ^scientific-name <entry2-s-name>)
-->
   (<s> ^result failure
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting - | <entry1-name> | (| <entry1-s-name> |)| (crlf))
   (write |  result - | <entry2-name> | (| <entry2-s-name> |)| (crlf))
}

sp {apply*test-result*retrieve*good*none
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>
              ^entries <es>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<es> ^entry <entry1>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type retrieve
         ^status good
         ^expected <expected>)
   (<e-result> ^retrieved no-memory)
   (<entry1> ^id <expected>
             ^name <entry1-name>
             ^scientific-name <entry1-s-name>)
-->
   (<s> ^result failure
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting - | <entry1-name> | (| <entry1-s-name> |)| (crlf))
   (write |  result - no-memory| (crlf))
}

##


sp {apply*test-result*query*failure*success
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type query
         ^status failure)
   (<e-result> ^failure)
-->
   (<s> ^result success
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting - query failure| (crlf))
   (write |  result - query failure| (crlf))
}

sp {apply*test-result*query*failure*failure
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>
              ^entries <es>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<es> ^entry <entry2>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type query
         ^status failure)
   (<e-result> ^success
               ^retrieved <retrieved>)
   (<retrieved> ^observing <observed>)
   (<entry2> ^id <observed>
             ^name <entry2-name>
             ^scientific-name <entry2-s-name>)
-->
   (<s> ^result failure
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting - query failure| (crlf))
   (write |  result - | <entry2-name> | (| <entry2-s-name> |)| (crlf))
}

##

sp {apply*test-result*query*success*failure
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>
              ^entries <es>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<es> ^entry <entry1>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type query
         ^status success
         ^expected <expected>)
   (<e-result> ^failure)
   (<entry1> ^id <expected>
             ^name <entry1-name>
             ^scientific-name <entry1-s-name>)
-->
   (<s> ^result failure
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting - | <entry1-name> | (| <entry1-s-name> |)| (crlf))
   (write |  result - query failure| (crlf))
}

sp {apply*test-result*query*success*success
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>
              ^entries <es>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<es> ^entry <entry>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type query
         ^status success
         ^expected <expected>
         ^score <score>)
   (<e-result> ^retrieved <retrieved>
               ^match-score <score>)
   (<retrieved> ^observing <expected>)
   (<entry> ^id <expected>
            ^name <entry-name>
            ^scientific-name <entry-s-name>)
-->
   (<s> ^result success
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting (| <score> |) = | <entry-name> | (| <entry-s-name> |)| (crlf))
   (write |  result (| <score> |) = | <entry-name> | (| <entry-s-name> |)| (crlf))
}

sp {apply*test-result*query*success*wrong*retrieval
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>
              ^entries <es>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<es> ^entry <entry1>
         ^entry <entry2>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type query
         ^status success
         ^expected <expected>
         ^score <exp-score>)
   (<e-result> ^retrieved <retrieved>
               ^match-score <obs-score>)
   (<retrieved> ^observing {<observed> <> <expected>})
   (<entry1> ^id <expected>
            ^name <entry1-name>
            ^scientific-name <entry1-s-name>)
   (<entry2> ^id <observed>
            ^name <entry2-name>
            ^scientific-name <entry2-s-name>)
-->
   (<s> ^result failure
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting (| <exp-score> |) = | <entry1-name> | (| <entry1-s-name> |)| (crlf))
   (write |  result (| <obs-score> |) = | <entry2-name> | (| <entry2-s-name> |)| (crlf))
}

sp {apply*test-result*query*success*wrong*score
   (state <s> ^operator <op>
              ^tests <ts>
              ^epmem <epmem>
              ^entries <es>)
   (<ts> ^test <t>)
   (<epmem> ^result <e-result>)
   (<es> ^entry <entry>)
   (<op> ^name test-result
         ^test <c>
         ^step <step>)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>
         ^type query
         ^status success
         ^expected <expected>
         ^score <exp-score>)
   (<e-result> ^retrieved <retrieved>
               ^match-score {<obs-score> <> <exp-score>})
   (<retrieved> ^observing <expected>)
   (<entry> ^id <expected>
            ^name <entry-name>
            ^scientific-name <entry-s-name>)
-->
   (<s> ^result failure
        ^sub-phase result -
        ^sub-phase notify)
   (write |  expecting (| <exp-score> |) = | <entry-name> | (| <entry-s-name> |)| (crlf))
   (write |  result (| <obs-score> |) = | <entry-name> | (| <entry-s-name> |)| (crlf))
}

