###
### MOVE-BLOCK
###

##P5*propose*operator*move-block
##If the state has problem space move-single-unit-block and
##   there is a block and
##   that block is clear and
##   there is a second object that is clear and
##   the block is not on the table and being moved to the table
##then
##   create a move-block operator to
##      move the block on to the second object and
##   create an acceptable preference for that operator
 
sp {P5*propose*move-block
   (state <s> ^name blocks-world)
   (<s> ^clear <blockA>
        ^clear { <> <blockA> <object> })
   (<blockA> ^type block)
  -{(<s> ^ontop <ontop>)
    (<ontop> ^top-block <blockA>
             ^bottom-block <object>)}
-->
   (<s> ^operator <o> +, =)
   (<o> ^name move-block
        ^moving-block <blockA>
        ^destination <object>)}

## P6*evaluate*move-block*best*move-block-to-table
## If the state has problem space move-single-unit-block and
##   an operator is proposed to move a block to the table and
##   that block is not in-place and
##   that block is not on the table
##then
##   create a best preference of the operator
##   and create an indifferent preference so avoid ties when > three blocks

sp {P6*evaluate*move-block*best*move-block-to-table
   (state <s> ^name blocks-world
             -^inplace-object <block1>
              ^object <table>
              ^ontop <ontop>
              ^operator <op1> +)
   (<table> ^name table)
   (<ontop> ^top-block <block1>
            ^bottom-block { <> <table> <block2> })
   (<op1> ^name move-block
          ^moving-block <block1>
          ^destination <table>)
-->
   (<s> ^operator <op1> >, =)}


##P7*evaluate*move-block*better*move-to-goal
##If the state has problem space move-single-unit-block and
##   an operator is proposed to move a block onto a second block and
##   that second block is in-place and
##   in the desired state the block is on the second block and
##   there is a second operator different from the first operator
##then
##   create a preference that the first operator is better than the second

sp {P7*evaluate*move-block*better*move-to-goal
   (state <s> ^name blocks-world
              ^inplace-object <block2>
              ^desired.ontop <ontop>
              ^operator <op1> +
              ^operator { <> <op1> <op2> } +)
   (<ontop>  ^top-block <block1>
             ^bottom-block <block2>)
   (<op1> ^name move-block
          ^moving-block <block1>
          ^destination <block2>)
-->
   (<s> ^operator <op1> > <op2>)}

##P8*evaluate*move-block*numeric*move-on-table
##If the state has problem space move-single-unit-block and
##  in the desired state a block is on the table and
##   there is an operator proposed to move the block on the table
##then
##   create a numeric preference for the operator with value 0.9

### Commented out because unnecessary - just to show structure of rule
#sp {P8*evaluate*move-block*numeric*move-on-table
#   (state <s> name move-block
#              ^desired.ontop <ontop>)
#              ^operator <op1> +)
#   (<ontop>  ^top-block <block1>
#             ^bottom-block <block2>)
#   (<block2> ^name table)
#   (<op1> ^name move-block
#          ^moving-block <block1>
#          ^destination <block2>)
#-->
#   (<s> ^operator <op1> = .9)}
#

##P9*apply*move-block*external
##If an operator is selected for moving a block onto an object
##then
##   create an output command on the output-link
##      to move that block onto that object.

### Commented out because unnecessary - just to show structure of rule
#sp {P9*apply*move-block*external
#   (state <s> ^operator <o>
#              ^io.output-link <out>
#   (<o> ^moving-block <mblock>
#        ^destination <tblock>)
#-->
#   (<out> ^move <move>)
#   (<move> ^moving-block <mblock>
#           ^destination <tblock>)}


##P10*apply*move-block*internal
##If an operator is selected for moving a block onto object and
##   that block is on a second object
##then
##   add that the block is on the first object and
##   delete that the block is on the second object
                  
sp {P10*apply*move-block*internal
   (state <s> ^operator <o>
              ^ontop <ontop>)
   (<ontop> ^top-block <mblock>
            ^bottom-block { <> <tblock> <object> })
   (<o> ^moving-block <mblock>
        ^destination <tblock>)
-->
   (<ontop> ^bottom-block <tblock>
            ^bottom-block <object> -)
}

